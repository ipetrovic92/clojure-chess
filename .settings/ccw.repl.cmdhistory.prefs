cmdhistory=["(not-occupied? init-board \:a 1)" "(occupied? init-board \:a 1)" "(occupied? init-board \:a 0)" "(occupied? init-board \:a 3)" "(occupied? init-board \:a 7)" "(occupied? init-board \:h 7\\n           \\n           )" "x-max" "(empty-field-val)" "empty-field-val" "x-value" "(is-digit \\\\3)" "(is-digit? \\\\3)" "(is-digit? \\\\a)" "(is-str-num? \\"12 ddd\\")" "(is-str-num? \\"12 \\")" "(is-str-num? \\"12\\")" "(valid-x? \:a)" "(contains? [\:a \:b \:c \:d \:e \:f \:g \:h] \:a)" "(contains? [\:a \:b \:c \:d \:e \:f \:g \:h] \:c)" "(contains? [\:a \:b \:c \:d \:e \:f \:g \:h] \\"\:c\\")" "(contains? [\:a \:b \:c \:d \:e \:f \:g 1] 1)" "(contains? [\:a \:b \:c \:d \:e \:f \:g 1] \:g)" "(\:a [\:a \:b \:c \:d \:e \:f \:g 1])" "(get [\:a \:b \:c \:d \:e \:f \:g 1] 0)" "(\= (get [\:a \:b \:c \:d \:e \:f \:g 1] 0) \:a)" "(doc contains?)" "(doc some)" "(valid-x? \:a)" "(some \#(\:a) x-value)" "(some \#(\= % \:a) x-value)" "(some \#(\= % 1) x-value)" "(some \#(\= % \:e) x-value)" "(some \#(\= % \:i) x-value)" "(\= 1 \:i)" "(\= \:i 1)" "(valid-x? \:a)" "(valid-x? \:1)" "(valid-x? 1)" "(and (vlaid-x? 2))" "(and (valid-x? 2))" "(doc some)" "(some \#{\:a} x-value)" "(some \#{\:1} x-value)" "(valid-x? \:a)" "(valid-x? \:1)" "(nil? false)" "(nil? true)" "(complement nil?) (some \#(\= % \:a) x-value)" "((complement nil?) (some \#(\= % \:a) x-value))" "((complement nil?) (some \#(\= % \:1) x-value))" "(valid-x? \:a)" "(valid-x? \:1)" "(valid-x? \:a)" "(valid-x? \:1)" "(valid-x? \\"\\")" "(valid-y 9)" "(valid-y? 9)" "(valid-y? 7)" "(valid-y? 8)" "(valid-y? 0)" "(valid-y? 0.5)" "(valid-y? 7.1)" "(valid-y? 1)" "(valid-y? 0)" "(valid-y? 7)" "(valid-y? 6.9)" "(valid-y? 4)" "(instance? Integer 4)" "(instance? Integer 4.0)" "(instance? Int 4)" "(instance? Number 4)" "(instance? Number 4.4)" "(instance? Long 4.4)" "(instance? Long 4)" "(valid-y? 4)" "(valid-y? 0)" "(valid-y? 7)" "(valid-y? 6.1)" "(valid-xy? \:a 1)" "(valid-xy? \:a 8)" "(valid-xy? \:a 3)" "(zipmap x-value (range 8))" "(x-as-num \:a)" "(x-as-num \:g)" "(x-as-num \:h)" "(x-as-num \:i)" "(x-as-key 5)" "(x-as-key 7)" "(x-as-key 8)" "(in-ns 'clojure-chess.chessman)" "(get-chessman-short-name init-board \:a 1)" "(get-chessman-short-name init-board \:a 0)" "(get-chessman-short-name init-board \:a 7)" "(get-chessman-short-name init-board \:a 4)" "(get-chessman-short-name init-board \:a 9)" "(get-chessman-full-name init-board \:a 9)" "(get-chessman-full-name init-board \:a 8)" "(get-chessman-full-name init-board \:a 7)" "(get-chessman-full-name init-board \:a 3)" "(let [chessman-short-name (get (get-chessman-short-name init-board \:a 1) 1)] chessman-short-name)" "(let [chessman-short-name (get (get-chessman-short-name init-board \:a 3) 1)] chessman-short-name)" "(not-valid-xy? \:a 1)" "(not-valid-xy? \:a 9)" "(not-valid-xy? \:a 3)" "(not-valid-xy? \:a 7)" "(not-valid-xy? s 7)" "(not-valid-xy? \:y 7)" "(get-chessman-full-name init-board \:a 3)" "(get-chessman-full-name init-board \:a 7)" "(get-chessman-full-name init-board \:a 0)" "(get-chessman-full-name init-board \:h 3)" "(get-chessman-full-name init-board \:h 1)" "(get-chessman-full-name init-board \:h 0)" "(get-chessman-full-name init-board \:h 11)" "(get-chessman-color-short-name init-board \:h 1)" "(get-chessman-color-short-name init-board \:h 2)" "(get-chessman-color-short-name init-board \:h 4)" "(get-chessman-color-full-name init-board \:h 0)" "(get-chessman-color-full-name init-board \:a 1)" "(get-chessman-color-short-name chess-board \:a 0)" "(get-chessman-color-short-name init-board \:a 0)" "(get-chessman-color-short-name chess-board \:a 0)" "(get-chessman-color-full-name init-board \:a 1)" "(get-chessman-color-full-name init-board \:a 8)" "(get-chessman-color-full-name init-board \:a 7)" "(get-chessman-color-full-name init-board \:a 6)" "(white? init-board \:a 0)" "(white? init-board \:a 1)" "(white? init-board \:a 3)" "(white? init-board \:a 7)" "(black? init-board \:a 7)" "(black? init-board \:a 1)" "(same-color? init-board \:a 1 \:a 7)" "(same-color? init-board \:a 1 \:a 0)" "(set-chessman initboard \:a 4 \\"nesto\\")" "(set-chessman init-board \:a 4 \\"nesto\\")" "init-board" "(same-color? \:a 1 \:a 0\\n             )" "(same-color? init-board \:a 1 \:a 0\\n             )" "(white? init-board \:a 1)" "(white? init-board \:a 6)" "(white? init-board \:a 4\\n        )" "(color? \\\\b)" "(color? \\\\w)" "(color? \\\\a)" "chessmans" "(get chessmans \\\\p)" "(get chessmans \\\\v)" "(chessman? \\\\b)" "(chessman? \\\\s)" "(chessman? \\\\a)" "(chessman? \\\\p)" "(set-chessman init-board \:a 0 \\\\w \\\\p)" "(set-chessman init-board \:a 4 \\\\w \\\\p)" "(remove-chessman init-board \:a 1)" "(field-valid-for-move? init-board \:a 1 \:a 3)" "(field-valid-for-move? init-board \:a 1 \:a 7)" "(field-valid-for-move? init-board \:a 1 \:a 9)" "(field-valid-for-move? init-board \:a 2 \:a 3)" "(field-valid-for-move? init-board \:a 1 \:a 3)" "(field-valid-for-move? init-board \:a 1 \:a 1)" "(same-field? \:a 1 \:a 1)" "(same-field? \:a 1 \:a 2)" "(field-valid-for-move? init-board \:a 1 \:a 1)" "(field-valid-for-move? init-board \:a 1 \:a 2)" "(make-move init-board \:a 1 \:a 3)" "(make-move init-board \:a 1 \:a 0\\n           )" "(make-move init-board \:a 1 \:a 9\\n           )"]
eclipse.preferences.version=1
